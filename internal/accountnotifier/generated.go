// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package accountnotifier

import (
	"context"

	"github.com/Khan/genqlient/graphql"
	"github.com/app-sre/go-qontract-reconcile/pkg/gql"
)

// PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1 includes the requested fields of the GraphQL type PgpReencryptSettings_v1.
type PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1 struct {
	Aws_account_output_vault_path string `json:"aws_account_output_vault_path"`
	Reencrypt_vault_path          string `json:"reencrypt_vault_path"`
	Private_pgp_key_vault_path    string `json:"private_pgp_key_vault_path"`
}

// GetAws_account_output_vault_path returns PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1.Aws_account_output_vault_path, and is useful for accessing the field via an interface.
func (v *PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1) GetAws_account_output_vault_path() string {
	return v.Aws_account_output_vault_path
}

// GetReencrypt_vault_path returns PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1.Reencrypt_vault_path, and is useful for accessing the field via an interface.
func (v *PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1) GetReencrypt_vault_path() string {
	return v.Reencrypt_vault_path
}

// GetPrivate_pgp_key_vault_path returns PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1.Private_pgp_key_vault_path, and is useful for accessing the field via an interface.
func (v *PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1) GetPrivate_pgp_key_vault_path() string {
	return v.Private_pgp_key_vault_path
}

// PgpReencryptSettingsResponse is returned by PgpReencryptSettings on success.
type PgpReencryptSettingsResponse struct {
	Pgp_reencrypt_settings_v1 []PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1 `json:"pgp_reencrypt_settings_v1"`
}

// GetPgp_reencrypt_settings_v1 returns PgpReencryptSettingsResponse.Pgp_reencrypt_settings_v1, and is useful for accessing the field via an interface.
func (v *PgpReencryptSettingsResponse) GetPgp_reencrypt_settings_v1() []PgpReencryptSettingsPgp_reencrypt_settings_v1PgpReencryptSettings_v1 {
	return v.Pgp_reencrypt_settings_v1
}

// SmtpSettingsResponse is returned by SmtpSettings on success.
type SmtpSettingsResponse struct {
	Settings []SmtpSettingsSettingsAppInterfaceSettings_v1 `json:"settings"`
}

// GetSettings returns SmtpSettingsResponse.Settings, and is useful for accessing the field via an interface.
func (v *SmtpSettingsResponse) GetSettings() []SmtpSettingsSettingsAppInterfaceSettings_v1 {
	return v.Settings
}

// SmtpSettingsSettingsAppInterfaceSettings_v1 includes the requested fields of the GraphQL type AppInterfaceSettings_v1.
type SmtpSettingsSettingsAppInterfaceSettings_v1 struct {
	Smtp SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1 `json:"smtp"`
}

// GetSmtp returns SmtpSettingsSettingsAppInterfaceSettings_v1.Smtp, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1) GetSmtp() SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1 {
	return v.Smtp
}

// SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1 includes the requested fields of the GraphQL type SmtpSettings_v1.
type SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1 struct {
	MailAddress string                                                                                  `json:"mailAddress"`
	Timeout     int                                                                                     `json:"timeout"`
	Credentials SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1 `json:"credentials"`
}

// GetMailAddress returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1.MailAddress, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1) GetMailAddress() string {
	return v.MailAddress
}

// GetTimeout returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1.Timeout, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1) GetTimeout() int {
	return v.Timeout
}

// GetCredentials returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1.Credentials, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1) GetCredentials() SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1 {
	return v.Credentials
}

// SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1 includes the requested fields of the GraphQL type VaultSecret_v1.
type SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1 struct {
	Path    string `json:"path"`
	Field   string `json:"field"`
	Version int    `json:"version"`
	Format  string `json:"format"`
}

// GetPath returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1.Path, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1) GetPath() string {
	return v.Path
}

// GetField returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1.Field, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1) GetField() string {
	return v.Field
}

// GetVersion returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1.Version, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1) GetVersion() int {
	return v.Version
}

// GetFormat returns SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1.Format, and is useful for accessing the field via an interface.
func (v *SmtpSettingsSettingsAppInterfaceSettings_v1SmtpSmtpSettings_v1CredentialsVaultSecret_v1) GetFormat() string {
	return v.Format
}

// UsersResponse is returned by Users on success.
type UsersResponse struct {
	Users_v1 []UsersUsers_v1User_v1 `json:"users_v1"`
}

// GetUsers_v1 returns UsersResponse.Users_v1, and is useful for accessing the field via an interface.
func (v *UsersResponse) GetUsers_v1() []UsersUsers_v1User_v1 { return v.Users_v1 }

// UsersUsers_v1User_v1 includes the requested fields of the GraphQL type User_v1.
type UsersUsers_v1User_v1 struct {
	Path               string `json:"path"`
	Name               string `json:"name"`
	Org_username       string `json:"org_username"`
	Github_username    string `json:"github_username"`
	Slack_username     string `json:"slack_username"`
	Pagerduty_username string `json:"pagerduty_username"`
	Public_gpg_key     string `json:"public_gpg_key"`
}

// GetPath returns UsersUsers_v1User_v1.Path, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetPath() string { return v.Path }

// GetName returns UsersUsers_v1User_v1.Name, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetName() string { return v.Name }

// GetOrg_username returns UsersUsers_v1User_v1.Org_username, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetOrg_username() string { return v.Org_username }

// GetGithub_username returns UsersUsers_v1User_v1.Github_username, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetGithub_username() string { return v.Github_username }

// GetSlack_username returns UsersUsers_v1User_v1.Slack_username, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetSlack_username() string { return v.Slack_username }

// GetPagerduty_username returns UsersUsers_v1User_v1.Pagerduty_username, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetPagerduty_username() string { return v.Pagerduty_username }

// GetPublic_gpg_key returns UsersUsers_v1User_v1.Public_gpg_key, and is useful for accessing the field via an interface.
func (v *UsersUsers_v1User_v1) GetPublic_gpg_key() string { return v.Public_gpg_key }

// The query or mutation executed by PgpReencryptSettings.
const PgpReencryptSettings_Operation = `
query PgpReencryptSettings {
	pgp_reencrypt_settings_v1 {
		aws_account_output_vault_path
		reencrypt_vault_path
		private_pgp_key_vault_path
	}
}
`

func PgpReencryptSettings(
	ctx_ context.Context,
) (*PgpReencryptSettingsResponse, error) {
	req_ := &graphql.Request{
		OpName: "PgpReencryptSettings",
		Query:  PgpReencryptSettings_Operation,
	}
	var err_ error
	var client_ graphql.Client

	client_, err_ = gql.NewQontractClient(ctx_)
	if err_ != nil {
		return nil, err_
	}

	var data_ PgpReencryptSettingsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by SmtpSettings.
const SmtpSettings_Operation = `
query SmtpSettings {
	settings: app_interface_settings_v1 {
		smtp {
			mailAddress
			timeout
			credentials {
				path
				field
				version
				format
			}
		}
	}
}
`

func SmtpSettings(
	ctx_ context.Context,
) (*SmtpSettingsResponse, error) {
	req_ := &graphql.Request{
		OpName: "SmtpSettings",
		Query:  SmtpSettings_Operation,
	}
	var err_ error
	var client_ graphql.Client

	client_, err_ = gql.NewQontractClient(ctx_)
	if err_ != nil {
		return nil, err_
	}

	var data_ SmtpSettingsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by Users.
const Users_Operation = `
query Users {
	users_v1 {
		path
		name
		org_username
		github_username
		slack_username
		pagerduty_username
		public_gpg_key
	}
}
`

func Users(
	ctx_ context.Context,
) (*UsersResponse, error) {
	req_ := &graphql.Request{
		OpName: "Users",
		Query:  Users_Operation,
	}
	var err_ error
	var client_ graphql.Client

	client_, err_ = gql.NewQontractClient(ctx_)
	if err_ != nil {
		return nil, err_
	}

	var data_ UsersResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
