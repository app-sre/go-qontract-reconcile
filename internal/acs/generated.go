// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package acs

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
	"github.com/app-sre/go-qontract-reconcile/pkg/gql"
)

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1 includes the requested fields of the GraphQL type OidcPermissionAcs_v1.
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1 struct {
	Typename       string                                                                               `json:"__typename"`
	Name           string                                                                               `json:"name"`
	Description    string                                                                               `json:"description"`
	Service        string                                                                               `json:"service"`
	Permission_set string                                                                               `json:"permission_set"`
	Clusters       []GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1     `json:"clusters"`
	Namespaces     []GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1 `json:"namespaces"`
}

// GetTypename returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Typename, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetTypename() string {
	return v.Typename
}

// GetName returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Name, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetName() string {
	return v.Name
}

// GetDescription returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Description, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetDescription() string {
	return v.Description
}

// GetService returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Service, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetService() string {
	return v.Service
}

// GetPermission_set returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Permission_set, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetPermission_set() string {
	return v.Permission_set
}

// GetClusters returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Clusters, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetClusters() []GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1 {
	return v.Clusters
}

// GetNamespaces returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1.Namespaces, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) GetNamespaces() []GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1 {
	return v.Namespaces
}

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1 includes the requested fields of the GraphQL type Cluster_v1.
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1 struct {
	Name string `json:"name"`
}

// GetName returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1.Name, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1ClustersCluster_v1) GetName() string {
	return v.Name
}

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1 includes the requested fields of the GraphQL type Namespace_v1.
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1 struct {
	Name    string                                                                                              `json:"name"`
	Cluster GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1 `json:"cluster"`
}

// GetName returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1.Name, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1) GetName() string {
	return v.Name
}

// GetCluster returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1.Cluster, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1) GetCluster() GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1 {
	return v.Cluster
}

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1 includes the requested fields of the GraphQL type Cluster_v1.
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1 struct {
	Name string `json:"name"`
}

// GetName returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1.Name, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1NamespacesNamespace_v1ClusterCluster_v1) GetName() string {
	return v.Name
}

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1 includes the requested fields of the GraphQL type OidcPermissionVault_v1.
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1 struct {
	Typename    string `json:"__typename"`
	Name        string `json:"name"`
	Description string `json:"description"`
	Service     string `json:"service"`
}

// GetTypename returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1.Typename, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1) GetTypename() string {
	return v.Typename
}

// GetName returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1.Name, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1) GetName() string {
	return v.Name
}

// GetDescription returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1.Description, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1) GetDescription() string {
	return v.Description
}

// GetService returns GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1.Service, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1) GetService() string {
	return v.Service
}

// GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1 includes the requested fields of the GraphQL interface OidcPermission_v1.
//
// GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1 is implemented by the following types:
// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1
// GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1
type GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1 interface {
	implementsGraphQLInterfaceGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
	// GetName returns the interface-field "name" from its implementation.
	GetName() string
	// GetDescription returns the interface-field "description" from its implementation.
	GetDescription() string
	// GetService returns the interface-field "service" from its implementation.
	GetService() string
}

func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1) implementsGraphQLInterfaceGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1() {
}
func (v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1) implementsGraphQLInterfaceGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1() {
}

func __unmarshalGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1(b []byte, v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "OidcPermissionAcs_v1":
		*v = new(GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1)
		return json.Unmarshal(b, *v)
	case "OidcPermissionVault_v1":
		*v = new(GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing OidcPermission_v1.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1: "%v"`, tn.TypeName)
	}
}

func __marshalGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1(v *GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1:
		typename = "OidcPermissionAcs_v1"

		result := struct {
			TypeName string `json:"__typename"`
			*GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionAcs_v1
		}{typename, v}
		return json.Marshal(result)
	case *GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1:
		typename = "OidcPermissionVault_v1"

		result := struct {
			TypeName string `json:"__typename"`
			*GetAcsOidcPermissionsOidc_permissions_v1OidcPermissionVault_v1
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1: "%T"`, v)
	}
}

// GetAcsOidcPermissionsResponse is returned by GetAcsOidcPermissions on success.
type GetAcsOidcPermissionsResponse struct {
	Oidc_permissions_v1 []GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1 `json:"-"`
}

// GetOidc_permissions_v1 returns GetAcsOidcPermissionsResponse.Oidc_permissions_v1, and is useful for accessing the field via an interface.
func (v *GetAcsOidcPermissionsResponse) GetOidc_permissions_v1() []GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1 {
	return v.Oidc_permissions_v1
}

func (v *GetAcsOidcPermissionsResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*GetAcsOidcPermissionsResponse
		Oidc_permissions_v1 []json.RawMessage `json:"oidc_permissions_v1"`
		graphql.NoUnmarshalJSON
	}
	firstPass.GetAcsOidcPermissionsResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Oidc_permissions_v1
		src := firstPass.Oidc_permissions_v1
		*dst = make(
			[]GetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal GetAcsOidcPermissionsResponse.Oidc_permissions_v1: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalGetAcsOidcPermissionsResponse struct {
	Oidc_permissions_v1 []json.RawMessage `json:"oidc_permissions_v1"`
}

func (v *GetAcsOidcPermissionsResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *GetAcsOidcPermissionsResponse) __premarshalJSON() (*__premarshalGetAcsOidcPermissionsResponse, error) {
	var retval __premarshalGetAcsOidcPermissionsResponse

	{

		dst := &retval.Oidc_permissions_v1
		src := v.Oidc_permissions_v1
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalGetAcsOidcPermissionsOidc_permissions_v1OidcPermission_v1(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal GetAcsOidcPermissionsResponse.Oidc_permissions_v1: %w", err)
			}
		}
	}
	return &retval, nil
}

// The query or mutation executed by GetAcsOidcPermissions.
const GetAcsOidcPermissions_Operation = `
query GetAcsOidcPermissions {
	oidc_permissions_v1 {
		__typename
		name
		description
		service
		... on OidcPermissionAcs_v1 {
			permission_set
			clusters {
				name
			}
			namespaces {
				name
				cluster {
					name
				}
			}
		}
	}
}
`

func GetAcsOidcPermissions(
	ctx context.Context,
) (*GetAcsOidcPermissionsResponse, error) {
	req := &graphql.Request{
		OpName: "GetAcsOidcPermissions",
		Query:  GetAcsOidcPermissions_Operation,
	}
	var err error
	var client graphql.Client

	client, err = gql.NewQontractClient(ctx)
	if err != nil {
		return nil, err
	}

	var data GetAcsOidcPermissionsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
